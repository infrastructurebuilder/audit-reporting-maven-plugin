/**
 * Copyright Â© 2019 admin (admin@infrastructurebuilder.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.infrastructurebuilder.auditor;

import java.io.File;
import java.util.Locale;
import java.util.Objects;

import org.apache.maven.plugins.annotations.Component;
import org.apache.maven.plugins.annotations.LifecyclePhase;
import org.apache.maven.plugins.annotations.Mojo;
import org.apache.maven.plugins.annotations.Parameter;
import org.apache.maven.plugins.annotations.ResolutionScope;
import org.apache.maven.project.MavenProject;
import org.apache.maven.reporting.AbstractMavenReport;
import org.apache.maven.reporting.MavenReportException;

@Mojo(name = "audit", defaultPhase = LifecyclePhase.SITE, requiresDependencyResolution = ResolutionScope.RUNTIME, requiresProject = true, threadSafe = true)
public class AuditorReportMojo extends AbstractMavenReport {

  /**
   * Where the HTML pages of the report will be created
   */
  @Parameter(defaultValue = "${project.reporting.outputDirectory}", property = "outputDirectory", required = true)
  private File outputDirectory;

  /**
   * Practical reference to the maven project
   */
  @Parameter(defaultValue = "${project}", readonly = true)
  private MavenProject project;

  @Component
  private PageGenerator pageGenerator;

  public void setPageGenerator(PageGenerator pageGenerator) {
    this.pageGenerator = Objects.requireNonNull(pageGenerator);
  }

  /**
   * The output file prefix for the root report (typically
   * ${getOutputName().html})
   */
  @Override
  public String getOutputName() {
    return "audits";
  }

  /**
   * Name of the report when listed in the project-reports.html page of a project
   */
  @Override
  public String getName(Locale locale) {
    return "Audits";
  }

  /**
   * 
   */
  @Override
  public String getDescription(Locale locale) {
    return "This page is generated by the audit plugin, and contains a table of contents linking directly to each report, and all reports.";
  }

  @Override
  protected void executeReport(Locale locale) throws MavenReportException {
    pageGenerator.generate(this.getName(locale), getSink());
  }

}